name: Press Release Filter & Email (Yahoo)

on:
  workflow_dispatch:
    inputs:
      lookback_hours:
        description: "Lookback window (hours)"
        required: true
        default: "24"
        type: string
      send_always:
        description: "Email even if 0 items? (true/false)"
        required: true
        default: "true"
        type: string
  schedule:
    - cron: "15 12 * * 1-5"   # 08:15 ET
    - cron: "5 13 * * 1-5"    # 09:05 ET
    - cron: "20 20 * * 1-5"   # 16:20 ET
    - cron: "45 20 * * 1-5"   # 16:45 ET

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      PYTHONUNBUFFERED: "1"
      INPUT_PATH: "outputs/press_releases_raw.csv"
      COLLECT: "1"
      STRICT_POSITIVE: "1"
      LOOKBACK_HOURS: ${{ github.event.inputs.lookback_hours || '24' }}
      SEND_ALWAYS: ${{ github.event.inputs.send_always || 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas>=2.2.2 openpyxl>=3.1.5 reportlab>=4.2.2 feedparser>=6.0.11 requests>=2.32.3 beautifulsoup4>=4.12.3

      - name: Preflight secrets
        run: |
          die(){ echo "::error::$1"; exit 1; }
          [ -n "${{ secrets.YAHOO_EMAIL }}" ]        || die "YAHOO_EMAIL is missing"
          [ -n "${{ secrets.YAHOO_APP_PASSWORD }}" ] || die "YAHOO_APP_PASSWORD is missing"
          [ -n "${{ secrets.TO_EMAIL }}" ]           || die "TO_EMAIL is missing"

      - name: Run press release tracker
        run: |
          python .github/press_release_tracker.py --lookback_hours "${LOOKBACK_HOURS}" --send_always "${SEND_ALWAYS}"

      - name: Commit reports
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add reports/ || true
          git commit -m "Press Release report ($(date -u +'%Y-%m-%d %H:%M UTC'))" || echo "No changes"
          git push || echo "No push"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: press_release_reports
          path: reports/*.*
          if-no-files-found: ignore
