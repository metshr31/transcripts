name: Capture HLS or DASH manifest

on:
  workflow_dispatch:
    inputs:
      page_url:
        description: "Web page URL that plays the webcast"
        required: true
  schedule:
    # run at 13:10 UTC daily (adjust or remove if not needed)
    - cron: "10 13 * * *"

env:
  OUT_DIR: out

jobs:
  capture:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set PAGE_URL
        run: echo "PAGE_URL=${{ github.event.inputs.page_url || vars.WEBCAST_PAGE_URL || secrets.WEBCAST_PAGE_URL }}" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install playwright
          python -m playwright install --with-deps chromium

      - name: Capture manifest with Playwright
        shell: bash
        env:
          PAGE_URL: ${{ env.PAGE_URL }}
          OUT_DIR: ${{ env.OUT_DIR }}
        run: |
          set -euo pipefail
          mkdir -p "$OUT_DIR"
          python scripts/capture_manifest.py --url "$PAGE_URL" --out "$OUT_DIR" --wait 15 --debug
          echo "Captured files in $OUT_DIR:"
          ls -la "$OUT_DIR"

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: manifest-capture
          path: |
            ${{ env.OUT_DIR }}/first_manifest_url.txt
            ${{ env.OUT_DIR }}/manifests.json
            ${{ env.OUT_DIR }}/*.url
            ${{ env.OUT_DIR }}/network_requests.json

      # Optional: make the job *not* red when nothing is found; comment out to keep failing
      - name: Mark success if no manifest (optional)
        if: failure()
        run: |
          echo "No manifest found (likely DRM). Converting failure to neutral success for scheduling continuity."
          exit 0